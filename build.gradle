plugins {
    id 'java'
    id 'jacoco'
    id 'checkstyle'
    id 'pmd'
}

group 'no.unit.nva'
version '1.0-SNAPSHOT'

allprojects {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'checkstyle'
    apply plugin: 'pmd'

    sourceCompatibility = JavaVersion.VERSION_11  // source-code version and must be <= targetCompatibility
    targetCompatibility = JavaVersion.VERSION_11 // bytecode target version

    def jacksonVersion = '2.10.3'
    def problemVersion = '0.23.0'

    dependencies {
        implementation group: 'com.amazonaws', name: 'aws-lambda-java-core', version: '1.2.0'
        implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
        implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jacksonVersion
        implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.10'
        implementation group: 'org.zalando', name: 'problem', version: problemVersion
        implementation group: 'org.zalando', name: 'jackson-datatype-problem', version: problemVersion

        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.5.2'
        testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.2.4'
        testImplementation group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.19.0'
    }

    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }

    pmd {
        ruleSetConfig = rootProject.resources.text.fromFile('config/pmd/ruleset.xml')
        ruleSets = []
        ignoreFailures = false
    }

    checkstyle {
        configFile = rootProject.resources.text.fromFile('config/checkstyle/checkstyle.xml').asFile()
        showViolations = true
    }


    tasks.withType(Checkstyle) {
        reports {
            xml.enabled false
            html.enabled true
            html.stylesheet rootProject.resources.text.fromFile('config/checkstyle/checkstyle-simple.xsl')
        }
    }

    check.dependsOn jacocoTestCoverageVerification
    jacocoTestCoverageVerification.dependsOn(jacocoTestReport)

    jacocoTestCoverageVerification {
        violationRules {
            rule {
                limit {
                    counter = 'METHOD'
                    value = 'COVEREDRATIO'
                    minimum = 1.00
                }
            }

            rule {
                limit {
                    counter = 'CLASS'
                    value = 'COVEREDRATIO'
                    minimum = 1.00
                }
            }
        }
    }
}